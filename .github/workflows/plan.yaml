name: plan

on:
  pull_request:
    branches:
      - master

jobs:
  plan:
    name: plan
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        dir:
          [
            iam,
            emails,
            networks,
            domains,
            notifies/line,
            notifies/alarms,
            notifies/budgets,
            services/redirector,
            services/kis9a_ig,
            services/esbuild_hyperapp/main,
            services/esbuild_hyperapp/next,
            basic_auth/stag,
          ]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Check diff
        id: diff
        uses: technote-space/get-diff-action@v4.0.2
        with:
          PATTERNS: |
            ${{ matrix.dir }}/**/*.tf

      - uses: jwalton/gh-find-current-pr@v1
        id: prid
        with:
          state: open

      - name: Set COMMIT_MESSAGE
        run: echo "COMMIT_MESSAGE=$(git log -1 --pretty=format:"%s")" >> $GITHUB_ENV

      - name: Set PR_NUMBER
        run: echo "PR_NUMBER=${PR}" >> $GITHUB_ENV
        env:
          PR: ${{ steps.prid.outputs.pr }}

      - name: Configure aws credentials
        if: steps.diff.outputs.diff
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-1

      - name: Setup terraform
        if: steps.diff.outputs.diff
        uses: hashicorp/setup-terraform@v1.3.2
        with:
          terraform_version: 1.0.9
          terraform_wrapper: false

      - name: Check format
        id: fmt
        if: steps.diff.outputs.diff
        run: terraform fmt -check -recursive
        working-directory: ${{ matrix.dir }}
        continue-on-error: true

      - name: Notify fmt fails
        if: steps.fmt.outcome != 'success' && steps.diff.outputs.diff
        uses: tokorom/action-slack-incoming-webhook@master
        env:
          INCOMING_WEBHOOK_URL: ${{ secrets.INCOMING_WEBHOOK_URL_NOTIFY }}
        with:
          text: fmt failed on ${{ github.server_url }}/${{ github.repository }}/${{ matrix.dir }}
          attachments: |
            [
              {
                "color": "warn",
                "author_name": "${{ github.actor }}",
                "author_icon": "${{ github.event.sender.avatar_url }}",
                "fields": [
                  {
                    "title": "GitHub Actions URL",
                    "value": "${{ github.event.repository.url }}/actions/runs/${{ github.run_id }}"
                  },
                  {
                    "title": "Github PR URL",
                    "value": "${{ github.server_url }}/${{ github.repository }}/pull/${{ env.PR_NUMBER }}"
                  },
                  {
                    "title": "Commit message",
                    "value": "${{ env.COMMIT_MESSAGE }}"
                  },
                  {
                    "title": "Commit URL",
                    "value": "${{ github.server_url }}/${{ github.repository }}/pull/${{ env.PR_NUMBER }}/commits/${{ github.event.pull_request.head.sha }}"
                  },
                ]
              }
            ]

      - name: Initialize
        id: init
        if: steps.diff.outputs.diff
        run: terraform init
        working-directory: ${{ matrix.dir }}
        continue-on-error: true

      - name: Notify init failures
        if: steps.init.outcome != 'success' && steps.diff.outputs.diff
        uses: tokorom/action-slack-incoming-webhook@master
        env:
          INCOMING_WEBHOOK_URL: ${{ secrets.INCOMING_WEBHOOK_URL_NOTIFY }}
        with:
          text: ini failed on ${{ github.server_url }}/${{ github.repository }}/${{ matrix.dir }}
          attachments: |
            [
              {
                "color": "danger",
                "author_name": "${{ github.actor }}",
                "author_icon": "${{ github.event.sender.avatar_url }}",
                "fields": [
                  {
                    "title": "GitHub Actions URL",
                    "value": "${{ github.event.repository.url }}/actions/runs/${{ github.run_id }}"
                  },
                  {
                    "title": "Github PR URL",
                    "value": "${{ github.server_url }}/${{ github.repository }}/pull/${{ env.PR_NUMBER }}"
                  },
                  {
                    "title": "Commit message",
                    "value": "${{ env.COMMIT_MESSAGE }}"
                  },
                  {
                    "title": "Commit URL",
                    "value": "${{ github.server_url }}/${{ github.repository }}/pull/${{ env.PR_NUMBER }}/commits/${{ github.event.pull_request.head.sha }}"
                  }
                ]
              }
            ]

      - name: Exit on init failures
        if: steps.init.outcome != 'success' && steps.diff.outputs.diff
        run: |
          exit 1

      - name: Download modules
        if: steps.diff.outputs.diff
        run: terraform get
        working-directory: ${{ matrix.dir }}

      - name: Validate
        id: validate
        if: steps.diff.outputs.diff
        run: terraform validate -no-color
        working-directory: ${{ matrix.dir }}
        continue-on-error: true

      - name: Notify validate failures
        if: steps.validate.outcome != 'success' && steps.diff.outputs.diff
        uses: tokorom/action-slack-incoming-webhook@master
        env:
          INCOMING_WEBHOOK_URL: ${{ secrets.INCOMING_WEBHOOK_URL_NOTIFY }}
        with:
          text: validate failed on ${{ github.server_url }}/${{ github.repository }}/${{ matrix.dir }}
          attachments: |
            [
              {
                "color": "danger",
                "author_name": "${{ github.actor }}",
                "author_icon": "${{ github.event.sender.avatar_url }}",
                "fields": [
                  {
                    "title": "GitHub Actions URL",
                    "value": "${{ github.event.repository.url }}/actions/runs/${{ github.run_id }}"
                  },
                  {
                    "title": "Github PR URL",
                    "value": "${{ github.server_url }}/${{ github.repository }}/pull/${{ env.PR_NUMBER }}"
                  },
                  {
                    "title": "Commit message",
                    "value": "${{ env.COMMIT_MESSAGE }}"
                  },
                  {
                    "title": "Commit URL",
                    "value": "${{ github.server_url }}/${{ github.repository }}/pull/${{ env.PR_NUMBER }}/commits/${{ github.event.pull_request.head.sha }}"
                  }
                ]
              }
            ]

      - name: Exit on validate failures
        if: steps.validate.outcome != 'success' && steps.diff.outputs.diff
        run: |
          exit 1

      - name: TFSec error check
        if: steps.diff.outputs.diff
        uses: reviewdog/action-tfsec@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          working_directory: ${{ matrix.dir }}
          reporter: github-pr-review
          filter_mode: nofilter

      - name: Terraform Plan
        if: steps.diff.outputs.diff || github.event_name == 'pull_request'
        id: plan
        env:
          TF_VAR_aws_region: "ap-northeast-1"
          TF_VAR_aws_profile: "default"
          TF_VAR_shared_credentials_file: "~/.aws/credentials"
        run: |
          terraform plan -no-color 2>&1 | tee /tmp/plan.txt
          sed -i '/Refreshing state.../d' /tmp/plan.txt
        working-directory: ${{ matrix.dir }}
        continue-on-error: true

      - name: Notify plan failures
        if: steps.plan.outcome != 'success' && steps.diff.outputs.diff
        uses: tokorom/action-slack-incoming-webhook@master
        env:
          INCOMING_WEBHOOK_URL: ${{ secrets.INCOMING_WEBHOOK_URL_NOTIFY }}
        with:
          text: plan failed on ${{ github.server_url }}/${{ github.repository }}/${{ matrix.dir }}
          attachments: |
            [
              {
                "color": "danger",
                "author_name": "${{ github.actor }}",
                "author_icon": "${{ github.event.sender.avatar_url }}",
                "fields": [
                  {
                    "title": "GitHub Actions URL",
                    "value": "${{ github.event.repository.url }}/actions/runs/${{ github.run_id }}"
                  },
                  {
                    "title": "Github PR URL",
                    "value": "${{ github.server_url }}/${{ github.repository }}/pull/${{ env.PR_NUMBER }}"
                  },
                  {
                    "title": "Commit message",
                    "value": "${{ env.COMMIT_MESSAGE }}"
                  },
                  {
                    "title": "Commit URL",
                    "value": "${{ github.server_url }}/${{ github.repository }}/pull/${{ env.PR_NUMBER }}/commits/${{ github.event.pull_request.head.sha }}"
                  }
                ]
              }
            ]

      - name: Exit on plan failures
        if: steps.plan.outcome != 'success' && steps.diff.outputs.diff
        run: |
          exit 1

      - uses: actions/github-script@v4.0.2
        if: github.event_name == 'pull_request' && steps.diff.outputs.diff
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require("fs");
            const plan = fs.readFileSync("/tmp/plan.txt", "utf8");
            const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
            #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
            #### Terraform Validation ü§ñ${{ steps.validate.outputs.stdout }}
            #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`

            <details><summary>Show Plan</summary>

            \`\`\`hcl
            ${ plan }
            \`\`\`
            </details>

            *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Working Directory: \`${{ matrix.dir }}\`, Workflow: \`${{ github.workflow }}\`*`;

            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })

      - name: Notify plan success
        if: steps.plan.outcome == 'success' && steps.diff.outputs.diff
        uses: tokorom/action-slack-incoming-webhook@master
        env:
          INCOMING_WEBHOOK_URL: ${{ secrets.INCOMING_WEBHOOK_URL_NOTIFY }}
        with:
          text: plan success on ${{ github.server_url }}/${{ github.repository }}/${{ matrix.dir }}
          attachments: |
            [
              {
                "color": "good",
                "author_name": "${{ github.actor }}",
                "author_icon": "${{ github.event.sender.avatar_url }}",
                "fields": [
                  {
                    "title": "GitHub Actions URL",
                    "value": "${{ github.event.repository.url }}/actions/runs/${{ github.run_id }}"
                  },
                  {
                    "title": "Github PR URL",
                    "value": "${{ github.server_url }}/${{ github.repository }}/pull/${{ env.PR_NUMBER }}"
                  },
                  {
                    "title": "Commit message",
                    "value": "${{ env.COMMIT_MESSAGE }}"
                  },
                  {
                    "title": "Commit URL",
                    "value": "${{ github.server_url }}/${{ github.repository }}/pull/${{ env.PR_NUMBER }}/commits/${{ github.event.pull_request.head.sha }}"
                  }
                ]
              }
            ]
